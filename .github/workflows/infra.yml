name: Terraform Plan and Apply for Dev Environment

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: ./infra/envs/dev

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      aws_region: us-west-2
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    outputs:
      tfPlanExitCode: ${{ steps.tf-plan.outputs.exitcode }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: "1.9.5"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::783764572028:role/github-actions-spokanerust-infra
          role-session-name: PlanAndApplyInfra
          aws-region: ${{ env.aws_region }}

      - name: Terraform Init
        run: terraform init

      - name: Check Terraform Format
        working-directory: ./infra
        run: terraform fmt -check -recursive

      # Exit code meanings: 0 - Success, no changes. 1 - Unsuccessful, unanticipated terraform failure. 2 - Success, pending changes to be applied.
      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo "Terraform plan failed"
            exit 1
          else
            exit 0
          fi

      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/envs/dev/tfplan

      - name: Create Text Output
        id: tf-plan-output-text
        run: |
          TERRAFORM_PLAN="$(terraform show -no-color tfplan)"
          delim="$(openssl rand -hex 8)"
          echo "summary<<${delim}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to Expand Output</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo '</details>' >> $GITHUB_OUTPUT
          echo "${delim}" >> $GITHUB_OUTPUT

      - name: Publish Terraform Plan as Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-output-text.outputs.summary }}
        run: echo -e "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      - name: Post Terraform Plan as PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          SUMMARY: "${{ steps.tf-plan-output-text.outputs.summary }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  terraform-apply:
    name: Terraform Apply
    needs: [terraform-plan]
    if: github.event_name != 'pull_request' && needs.terraform-plan.outputs.tfPlanExitCode == '2' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    env:
      aws_region: us-west-2

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: "1.9.5"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::783764572028:role/github-actions-spokanerust-infra
          role-session-name: PlanAndApplyInfra
          aws-region: ${{ env.aws_region }}

      - name: Terraform Init
        run: terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve "$GITHUB_WORKSPACE/tfplan"
